#
# Copyright (C) 2013 Martin Ã…berg
#
# This program is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation,
# either version 3 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will
# be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General
# Public License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
CONFIG VCCAUX=3.3;
VOLTAGE = 1.2;

#NET "*" IOB = TRUE;
#NET "*" IOSTANDARD = LVCMOS33;
#NET "*" DRIVE = 6;
#INST "*" IOB = FORCE;
CONFIG PROHIBIT = P140;
CONFIG PROHIBIT = P33;
NET "CLK25MHZ" IOSTANDARD = LVCMOS33;
NET "CLK25MHZ" LOC = P132;
NET "DEBUG_RX" IOSTANDARD = LVCMOS33;
NET "DEBUG_RX" LOC = P35;
NET "DEBUG_TX" IOSTANDARD = LVCMOS33;
NET "DEBUG_TX" LOC = P48;
NET "PHY_MDC" IOSTANDARD = LVCMOS33;
NET "PHY_MDC" LOC = P130;
NET "PHY_MDIO" IOSTANDARD = LVCMOS33;
NET "PHY_MDIO" LOC = P131;
NET "PHY_MDIO" PULLUP;
NET "PHY_nRST" IOSTANDARD = LVCMOS33;
NET "PHY_nRST" LOC = P117;
NET "RL_A[10]" IOSTANDARD = LVCMOS33;
NET "RL_A[10]" LOC = P97;
NET "RL_A[11]" IOSTANDARD = LVCMOS33;
NET "RL_A[11]" LOC = P96;
NET "RL_A[12]" IOSTANDARD = LVCMOS33;
NET "RL_A[12]" LOC = P93;
NET "RL_A[13]" IOSTANDARD = LVCMOS33;
NET "RL_A[13]" LOC = P92;
NET "RL_A[14]" IOSTANDARD = LVCMOS33;
NET "RL_A[14]" LOC = P91;
NET "RL_A[15]" IOSTANDARD = LVCMOS33;
NET "RL_A[15]" LOC = P90;
NET "RL_A[16]" IOSTANDARD = LVCMOS33;
NET "RL_A[16]" LOC = P88;
NET "RL_A[17]" IOSTANDARD = LVCMOS33;
NET "RL_A[17]" LOC = P87;
NET "RL_A[18]" IOSTANDARD = LVCMOS33;
NET "RL_A[18]" LOC = P85;
NET "RL_A[19]" IOSTANDARD = LVCMOS33;
NET "RL_A[19]" LOC = P84;
NET "RL_A[1]" IOSTANDARD = LVCMOS33;
NET "RL_A[1]" LOC = P101;
NET "RL_A[20]" IOSTANDARD = LVCMOS33;
NET "RL_A[20]" LOC = P82;
NET "RL_A[21]" IOSTANDARD = LVCMOS33;
NET "RL_A[21]" LOC = P80;
NET "RL_A[22]" IOSTANDARD = LVCMOS33;
NET "RL_A[22]" LOC = P79;
NET "RL_A[23]" IOSTANDARD = LVCMOS33;
NET "RL_A[23]" LOC = P78;
NET "RL_A[2]" IOSTANDARD = LVCMOS33;
NET "RL_A[2]" LOC = P103;
NET "RL_A[3]" IOSTANDARD = LVCMOS33;
NET "RL_A[3]" LOC = P104;
NET "RL_A[4]" IOSTANDARD = LVCMOS33;
NET "RL_A[4]" LOC = P105;
NET "RL_A[5]" IOSTANDARD = LVCMOS33;
NET "RL_A[5]" LOC = P110;
NET "RL_A[6]" IOSTANDARD = LVCMOS33;
NET "RL_A[6]" LOC = P123;
NET "RL_A[7]" IOSTANDARD = LVCMOS33;
NET "RL_A[7]" LOC = P102;
NET "RL_A[8]" IOSTANDARD = LVCMOS33;
NET "RL_A[8]" LOC = P99;
NET "RL_A[9]" IOSTANDARD = LVCMOS33;
NET "RL_A[9]" LOC = P98;
NET "RL_CDAC" IOSTANDARD = LVCMOS33;
NET "RL_CDAC" LOC = P111;
NET "RL_D[0]" IOSTANDARD = LVCMOS33;
NET "RL_D[0]" LOC = P62;
NET "RL_D[10]" IOSTANDARD = LVCMOS33;
NET "RL_D[10]" LOC = P63;
NET "RL_D[11]" IOSTANDARD = LVCMOS33;
NET "RL_D[11]" LOC = P64;
NET "RL_D[12]" IOSTANDARD = LVCMOS33;
NET "RL_D[12]" LOC = P67;
NET "RL_D[13]" IOSTANDARD = LVCMOS33;
NET "RL_D[13]" LOC = P68;
NET "RL_D[14]" IOSTANDARD = LVCMOS33;
NET "RL_D[14]" LOC = P69;
NET "RL_D[15]" IOSTANDARD = LVCMOS33;
NET "RL_D[15]" LOC = P70;
NET "RL_D[1]" IOSTANDARD = LVCMOS33;
NET "RL_D[1]" LOC = P59;
NET "RL_D[2]" IOSTANDARD = LVCMOS33;
NET "RL_D[2]" LOC = P57;
NET "RL_D[3]" IOSTANDARD = LVCMOS33;
NET "RL_D[3]" LOC = P54;
NET "RL_D[4]" IOSTANDARD = LVCMOS33;
NET "RL_D[4]" LOC = P50;
NET "RL_D[5]" IOSTANDARD = LVCMOS33;
NET "RL_D[5]" LOC = P49;
NET "RL_D[6]" IOSTANDARD = LVCMOS33;
NET "RL_D[6]" LOC = P51;
NET "RL_D[7]" IOSTANDARD = LVCMOS33;
NET "RL_D[7]" LOC = P55;
NET "RL_D[8]" IOSTANDARD = LVCMOS33;
NET "RL_D[8]" LOC = P58;
NET "RL_D[9]" IOSTANDARD = LVCMOS33;
NET "RL_D[9]" LOC = P60;
NET "RL_D_nOE" IOSTANDARD = LVCMOS33;
NET "RL_D_nOE" LOC = P72;
NET "RL_D_TO_GRETA" IOSTANDARD = LVCMOS33;
NET "RL_D_TO_GRETA" LOC = P71;
NET "RL_nAS" IOSTANDARD = LVCMOS33;
NET "RL_nAS" LOC = P53;
NET "RL_nDTACK" IOSTANDARD = LVCMOS33;
NET "RL_nDTACK" LOC = P113;
NET "RL_nINT2" IOSTANDARD = LVCMOS33;
NET "RL_nINT2" LOC = P115;
NET "RL_nINT6" IOSTANDARD = LVCMOS33;
NET "RL_nINT6" LOC = P114;
NET "RL_nINT7" IOSTANDARD = LVCMOS33;
NET "RL_nINT7" LOC = P112;
NET "RL_nLDS" IOSTANDARD = LVCMOS33;
NET "RL_nLDS" LOC = P77;
NET "RL_nOVR" IOSTANDARD = LVCMOS33;
NET "RL_nOVR" LOC = P116;
NET "RL_nRST" IOSTANDARD = LVCMOS33;
NET "RL_nRST" LOC = P83;
NET "RL_nUDS" IOSTANDARD = LVCMOS33;
NET "RL_nUDS" LOC = P76;
NET "RL_RnW" IOSTANDARD = LVCMOS33;
NET "RL_RnW" LOC = P75;
NET "RMII_CRS_DV" IOSTANDARD = LVCMOS33;
NET "RMII_CRS_DV" LOC = P126;
NET "RMII_REF_CLK" IOSTANDARD = LVCMOS33;
NET "RMII_REF_CLK" LOC = P125;
NET "RMII_RXD[0]" IOSTANDARD = LVCMOS33;
NET "RMII_RXD[0]" LOC = P127;
NET "RMII_RXD[1]" IOSTANDARD = LVCMOS33;
NET "RMII_RXD[1]" LOC = P129;
NET "RMII_TXD[0]" IOSTANDARD = LVCMOS33;
NET "RMII_TXD[0]" LOC = P121;
NET "RMII_TXD[1]" IOSTANDARD = LVCMOS33;
NET "RMII_TXD[1]" LOC = P120;
NET "RMII_TX_EN" IOSTANDARD = LVCMOS33;
NET "RMII_TX_EN" LOC = P124;
NET "SDRAM_A[0]" IOSTANDARD = LVCMOS33;
NET "SDRAM_A[0]" LOC = P141;
NET "SDRAM_A[10]" IOSTANDARD = LVCMOS33;
NET "SDRAM_A[10]" LOC = P142;
NET "SDRAM_A[11]" IOSTANDARD = LVCMOS33;
NET "SDRAM_A[11]" LOC = P32;
NET "SDRAM_A[1]" IOSTANDARD = LVCMOS33;
NET "SDRAM_A[1]" LOC = P139;
NET "SDRAM_A[2]" IOSTANDARD = LVCMOS33;
NET "SDRAM_A[2]" LOC = P138;
NET "SDRAM_A[3]" IOSTANDARD = LVCMOS33;
NET "SDRAM_A[3]" LOC = P135;
NET "SDRAM_A[4]" IOSTANDARD = LVCMOS33;
NET "SDRAM_A[4]" LOC = P42;
NET "SDRAM_A[5]" IOSTANDARD = LVCMOS33;
NET "SDRAM_A[5]" LOC = P41;
NET "SDRAM_A[6]" IOSTANDARD = LVCMOS33;
NET "SDRAM_A[6]" LOC = P39;
NET "SDRAM_A[7]" IOSTANDARD = LVCMOS33;
NET "SDRAM_A[7]" LOC = P38;
NET "SDRAM_A[8]" IOSTANDARD = LVCMOS33;
NET "SDRAM_A[8]" LOC = P37;
NET "SDRAM_A[9]" IOSTANDARD = LVCMOS33;
NET "SDRAM_A[9]" LOC = P43;
NET "SDRAM_BA[0]" IOSTANDARD = LVCMOS33;
NET "SDRAM_BA[0]" LOC = P134;
NET "SDRAM_BA[1]" IOSTANDARD = LVCMOS33;
NET "SDRAM_BA[1]" LOC = P143;
NET "SDRAM_CKE" IOSTANDARD = LVCMOS33;
NET "SDRAM_CKE" LOC = P18;
NET "SDRAM_CLK" IOSTANDARD = LVCMOS33;
NET "SDRAM_CLK" LOC = P19;
NET "SDRAM_DQ[0]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[0]" LOC = P5;
NET "SDRAM_DQ[10]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[10]" LOC = P25;
NET "SDRAM_DQ[11]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[11]" LOC = P27;
NET "SDRAM_DQ[12]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[12]" LOC = P28;
NET "SDRAM_DQ[13]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[13]" LOC = P29;
NET "SDRAM_DQ[14]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[14]" LOC = P31;
NET "SDRAM_DQ[15]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[15]" LOC = P30;
NET "SDRAM_DQ[1]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[1]" LOC = P4;
NET "SDRAM_DQ[2]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[2]" LOC = P3;
NET "SDRAM_DQ[3]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[3]" LOC = P6;
NET "SDRAM_DQ[4]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[4]" LOC = P7;
NET "SDRAM_DQ[5]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[5]" LOC = P8;
NET "SDRAM_DQ[6]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[6]" LOC = P10;
NET "SDRAM_DQ[7]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[7]" LOC = P11;
NET "SDRAM_DQ[8]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[8]" LOC = P21;
NET "SDRAM_DQ[9]" IOSTANDARD = LVCMOS33;
NET "SDRAM_DQ[9]" LOC = P24;
NET "SDRAM_LDQM" IOSTANDARD = LVCMOS33;
NET "SDRAM_LDQM" LOC = P12;
NET "SDRAM_nCAS" IOSTANDARD = LVCMOS33;
NET "SDRAM_nCAS" LOC = P15;
NET "SDRAM_nRAS" IOSTANDARD = LVCMOS33;
NET "SDRAM_nRAS" LOC = P16;
NET "SDRAM_nWE" IOSTANDARD = LVCMOS33;
NET "SDRAM_nWE" LOC = P13;
NET "SDRAM_UDQM" IOSTANDARD = LVCMOS33;
NET "SDRAM_UDQM" LOC = P20;
NET "SPI_CLK" IOSTANDARD = LVCMOS33;
NET "SPI_CLK" LOC = P46;
NET "SPI_DI" IOSTANDARD = LVCMOS33;
NET "SPI_DI" LOC = P45;
NET "SPI_DO" IOSTANDARD = LVCMOS33;
NET "SPI_DO" LOC = P47;
NET "SPI_nCS" IOSTANDARD = LVCMOS33;
NET "SPI_nCS" LOC = P44;

#TIMESPEC TS_clk133 = PERIOD "clk133_grp" 7.5ns HIGH;
NET "RMII_REF_CLK" TNM_NET = "RMII_REF_CLK_grp";
TIMESPEC TS_RMII_REF_CLK = PERIOD "RMII_REF_CLK_grp" 20 ns HIGH 50% INPUT_JITTER 600 ps;

# In the Offset In constraint, OFFSET=IN <value> determines the
# time from the capturing clock edge to the time in which data
# first becomes valid.
# In the Offset In constraint, the VALID <value> determines the
# duration in which data remains valid.

TIMEGRP "RMII_IN" OFFSET = IN 7 ns VALID 14 ns BEFORE "RMII_REF_CLK" RISING;

INST "RMII_CRS_DV" TNM = RMII_IN;
INST "RMII_RXD<0>" TNM = RMII_IN;
INST "RMII_RXD<1>" TNM = RMII_IN;

#TIMEGRP "SDRAM_IN" OFFSET = IN 2.1 ns VALID 4.6 ns BEFORE "SDRAM_CLK" RISING;

# Hynix SDRAM:
# Access Time From Clock, CL=3: tAC3 max 5.4 ns
# Data-out Hold Time: tOH min 2.5 ns
#OFFSET = OUT AFTER RMII_REF_CLK REFERENCE_PIN SDRAM_CLK;

INST "SDRAM_DQ<0>" TNM = SDRAM_IN;
INST "SDRAM_DQ<1>" TNM = SDRAM_IN;
INST "SDRAM_DQ<2>" TNM = SDRAM_IN;
INST "SDRAM_DQ<3>" TNM = SDRAM_IN;
INST "SDRAM_DQ<4>" TNM = SDRAM_IN;
INST "SDRAM_DQ<5>" TNM = SDRAM_IN;
INST "SDRAM_DQ<6>" TNM = SDRAM_IN;
INST "SDRAM_DQ<7>" TNM = SDRAM_IN;
INST "SDRAM_DQ<8>" TNM = SDRAM_IN;
INST "SDRAM_DQ<9>" TNM = SDRAM_IN;
INST "SDRAM_DQ<10>" TNM = SDRAM_IN;
INST "SDRAM_DQ<11>" TNM = SDRAM_IN;
INST "SDRAM_DQ<12>" TNM = SDRAM_IN;
INST "SDRAM_DQ<13>" TNM = SDRAM_IN;
INST "SDRAM_DQ<14>" TNM = SDRAM_IN;
INST "SDRAM_DQ<15>" TNM = SDRAM_IN;
